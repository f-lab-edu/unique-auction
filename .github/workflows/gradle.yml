# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ,"master" ]
  pull_request:
    branches: [ '*' ]
jobs:
  # 체크아웃 / 버전 설정
  setUp:
    runs-on: ubuntu-18.04
    steps:


      # 자바 버전 설정 11버전
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

#   #  코드포맷
#   codeFormatCheck:
#     needs: setUp
#     runs-on: ubuntu-18.04
#     steps:

#       # 코드 체크  아웃
#       - uses: actions/checkout@v3

#       # 코드 포맷
#       - name: codeFormat Check
#         run: ./gradlew checkstyleMain

#   testCheck:
#     needs: setUp
#     runs-on: ubuntu-18.04
#     steps:

#       # 코드 체크  아웃
#       - uses: actions/checkout@v3

#       # 테스트는 전부 성공해야 통과.
#       - name: Test with Gradle
#         run: spring_profiles_active=test ./gradlew clean build --build-cache -x checkstyleTest -x checkstyleMain

#       # 테스트 후 결과를 보기 위한 단계 추가
#       - name: Publish Unit Test Results
#         uses: EnricoMi/publish-unit-test-result-action@v1
#         if: ${{ always() }}
#         with:
#           files: build/test-results/**/*.xml

#       # 캐싱 제거 테스트를 더빠르게 해준다. 캐싱을 함으로서 재컴파일 필요 없고
#       # 종속성된 파일들을 원격 저장소에서 다운로드 할필요없이 캐시 복원된다
#       - name: Cleanup Gradle Cache
#         if: ${{ always() }}
#         run: |
#           rm -f ~/.gradle/caches/modules-2/modules-2.lock
#           rm -f ~/.gradle/caches/modules-2/gc.properties

  Build:
#     needs: [ codeFormatCheck, testCheck ]
    runs-on: ubuntu-18.04
    steps:

      - uses: actions/checkout@v3
      # 실제 어플리케이션 빌드시 -x 옵션을 통해 test와 컨벤션(위에서해줌) 제외한다.
      - name: Build with Gradle
        run: ./gradlew build -x test -x checkstyleTest -x checkstyleMain
 # 작업명
  CD:
    ## NCP OS : Ubuntu 18.04
    needs: [ Build ]
    runs-on: ubuntu-18.04

    steps:
      - name: deploy
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-2
        run: |
           pwd
           aws --endpoint-url=https://kr.object.ncloudstorage.com s3 cp ./build/libs/uniqueauction-0.0.1-SNAPSHOT.jar s3://uniquebucket

